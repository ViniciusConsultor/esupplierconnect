
//------------------------------------------------------------------------------
// 
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 31/12/2009
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// 
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Connector;

namespace SAPInterface
{

  /// <summary>
  /// Supplier Details - Work Area
  /// </summary>
  [RfcStructure(AbapName ="ZSUPPLIER" , Length = 542, Length2 = 1084)]
  [Serializable]
  public class ZSUPPLIER : SAPStructure
  {
   

    /// <summary>
    /// Account Number of Vendor or Creditor
    /// </summary>
 
    [RfcField(AbapName = "LIFNR", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 0, Offset2 = 0)]
    [XmlElement("LIFNR", Form=XmlSchemaForm.Unqualified)]
    public string Lifnr
    { 
       get
       {
          return _Lifnr;
       }
       set
       {
          _Lifnr = value;
       }
    }
    private string _Lifnr;


    /// <summary>
    /// Account Number of Vendor or Creditor
    /// </summary>
 
    [RfcField(AbapName = "PASSW", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 10, Offset2 = 20)]
    [XmlElement("PASSW", Form=XmlSchemaForm.Unqualified)]
    public string Passw
    { 
       get
       {
          return _Passw;
       }
       set
       {
          _Passw = value;
       }
    }
    private string _Passw;


    /// <summary>
    /// Title
    /// </summary>
 
    [RfcField(AbapName = "ANRED", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 15, Length2 = 30, Offset = 20, Offset2 = 40)]
    [XmlElement("ANRED", Form=XmlSchemaForm.Unqualified)]
    public string Anred
    { 
       get
       {
          return _Anred;
       }
       set
       {
          _Anred = value;
       }
    }
    private string _Anred;


    /// <summary>
    /// Name 1
    /// </summary>
 
    [RfcField(AbapName = "NAME1", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 35, Length2 = 70, Offset = 35, Offset2 = 70)]
    [XmlElement("NAME1", Form=XmlSchemaForm.Unqualified)]
    public string Name1
    { 
       get
       {
          return _Name1;
       }
       set
       {
          _Name1 = value;
       }
    }
    private string _Name1;


    /// <summary>
    /// Name 2
    /// </summary>
 
    [RfcField(AbapName = "NAME2", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 35, Length2 = 70, Offset = 70, Offset2 = 140)]
    [XmlElement("NAME2", Form=XmlSchemaForm.Unqualified)]
    public string Name2
    { 
       get
       {
          return _Name2;
       }
       set
       {
          _Name2 = value;
       }
    }
    private string _Name2;


    /// <summary>
    /// Name 3
    /// </summary>
 
    [RfcField(AbapName = "NAME3", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 35, Length2 = 70, Offset = 105, Offset2 = 210)]
    [XmlElement("NAME3", Form=XmlSchemaForm.Unqualified)]
    public string Name3
    { 
       get
       {
          return _Name3;
       }
       set
       {
          _Name3 = value;
       }
    }
    private string _Name3;


    /// <summary>
    /// House number and street
    /// </summary>
 
    [RfcField(AbapName = "STRAS", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 35, Length2 = 70, Offset = 140, Offset2 = 280)]
    [XmlElement("STRAS", Form=XmlSchemaForm.Unqualified)]
    public string Stras
    { 
       get
       {
          return _Stras;
       }
       set
       {
          _Stras = value;
       }
    }
    private string _Stras;


    /// <summary>
    /// Address
    /// </summary>
 
    [RfcField(AbapName = "ADRNR", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 175, Offset2 = 350)]
    [XmlElement("ADRNR", Form=XmlSchemaForm.Unqualified)]
    public string Adrnr
    { 
       get
       {
          return _Adrnr;
       }
       set
       {
          _Adrnr = value;
       }
    }
    private string _Adrnr;


    /// <summary>
    /// Postal Code
    /// </summary>
 
    [RfcField(AbapName = "PSTLZ", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 185, Offset2 = 370)]
    [XmlElement("PSTLZ", Form=XmlSchemaForm.Unqualified)]
    public string Pstlz
    { 
       get
       {
          return _Pstlz;
       }
       set
       {
          _Pstlz = value;
       }
    }
    private string _Pstlz;


    /// <summary>
    /// Region (State, Province, County)
    /// </summary>
 
    [RfcField(AbapName = "REGIO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 195, Offset2 = 390)]
    [XmlElement("REGIO", Form=XmlSchemaForm.Unqualified)]
    public string Regio
    { 
       get
       {
          return _Regio;
       }
       set
       {
          _Regio = value;
       }
    }
    private string _Regio;


    /// <summary>
    /// City
    /// </summary>
 
    [RfcField(AbapName = "CITY", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 35, Length2 = 70, Offset = 198, Offset2 = 396)]
    [XmlElement("CITY", Form=XmlSchemaForm.Unqualified)]
    public string City
    { 
       get
       {
          return _City;
       }
       set
       {
          _City = value;
       }
    }
    private string _City;


    /// <summary>
    /// Country Key
    /// </summary>
 
    [RfcField(AbapName = "LAND1", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 233, Offset2 = 466)]
    [XmlElement("LAND1", Form=XmlSchemaForm.Unqualified)]
    public string Land1
    { 
       get
       {
          return _Land1;
       }
       set
       {
          _Land1 = value;
       }
    }
    private string _Land1;


    /// <summary>
    /// First telephone number
    /// </summary>
 
    [RfcField(AbapName = "TELF1", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 16, Length2 = 32, Offset = 236, Offset2 = 472)]
    [XmlElement("TELF1", Form=XmlSchemaForm.Unqualified)]
    public string Telf1
    { 
       get
       {
          return _Telf1;
       }
       set
       {
          _Telf1 = value;
       }
    }
    private string _Telf1;


    /// <summary>
    /// Second telephone number
    /// </summary>
 
    [RfcField(AbapName = "TELF2", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 16, Length2 = 32, Offset = 252, Offset2 = 504)]
    [XmlElement("TELF2", Form=XmlSchemaForm.Unqualified)]
    public string Telf2
    { 
       get
       {
          return _Telf2;
       }
       set
       {
          _Telf2 = value;
       }
    }
    private string _Telf2;


    /// <summary>
    /// Fax Number
    /// </summary>
 
    [RfcField(AbapName = "TELFX", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 31, Length2 = 62, Offset = 268, Offset2 = 536)]
    [XmlElement("TELFX", Form=XmlSchemaForm.Unqualified)]
    public string Telfx
    { 
       get
       {
          return _Telfx;
       }
       set
       {
          _Telfx = value;
       }
    }
    private string _Telfx;


    /// <summary>
    /// E-Mail Address
    /// </summary>
 
    [RfcField(AbapName = "EMAIL", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 241, Length2 = 482, Offset = 299, Offset2 = 598)]
    [XmlElement("EMAIL", Form=XmlSchemaForm.Unqualified)]
    public string Email
    { 
       get
       {
          return _Email;
       }
       set
       {
          _Email = value;
       }
    }
    private string _Email;


    /// <summary>
    /// Function That Will Be Blocked
    /// </summary>
 
    [RfcField(AbapName = "SPERQ", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 2, Length2 = 4, Offset = 540, Offset2 = 1080)]
    [XmlElement("SPERQ", Form=XmlSchemaForm.Unqualified)]
    public string Sperq
    { 
       get
       {
          return _Sperq;
       }
       set
       {
          _Sperq = value;
       }
    }
    private string _Sperq;

  }

}
