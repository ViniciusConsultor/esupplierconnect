
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 04/01/2010
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Connector;

namespace SAPInterface
{

  /// <summary>
  /// Client SAP proxy class
  /// </summary>
  [WebServiceBinding(Name="dummy.Binding", Namespace="urn:sap-com:document:sap:rfc:functions")]
  [Serializable]
  public class SAPProxy3 : SAPClient
  {
    /// <summary>
    /// Initializes a new SAPProxy3.
    /// </summary>
    public SAPProxy3(){}

    /// <summary>
    /// Initializes a new SAPProxy3 with a new connection based on the specified connection string.
    /// </summary>
    /// <param name="connectionString">A connection string (e.g. RFC or URL) specifying the system where the proxy should connect to.</param>
    public SAPProxy3(string connectionString) : base(connectionString){}

    /// <summary>
    /// Initializes a new SAPProxy3 instance and adds it to the given container.
    /// This allows automated connection mananged by VS component designer:
    /// If container is disposed, it will also dispose this SAPClient instance,
    /// which will dispose a contained connection if needed.
    /// </summary>
    /// <param name="container"<The container where the new SAPClient instance is to be added.>/param<
    public SAPProxy3(System.ComponentModel.IContainer container) : base(container) {}    
  
    /// <summary>
    /// Exception constant for ABAP-Exception RECORDNOTFOUND
    /// </summary>
    public const string Recordnotfound = "RECORDNOTFOUND";
   
    /// <summary>
    /// Exception constant for ABAP-Exception ERRORUPDATE
    /// </summary>
    public const string Errorupdate = "ERRORUPDATE";
   
    /// <summary>
    /// Remote Function Module ZRETRIEVEORDER.  
    /// Retrieve Purchase Order Details
    /// </summary>
    /// <param name="Purchase_Component">Purchase Order Component Details - Work Area</param>
    /// <param name="Purchase_Header">Purchase Order Header Details - Work Area</param>
    /// <param name="Purchase_Header_Text">Purchase Order Header Text - Work Area</param>
    /// <param name="Purchase_Item">Purchase Order Item Details - Work Area</param>
    /// <param name="Purchase_Item_Text">Purchase Order Header Text - Work Area</param>
    /// <param name="Purchase_Schedule">Purchase Order Schedule Details - Work Area</param>
    /// <param name="Purchase_Service_Item">Purchase Order Service Item Details - Work Area</param>
    /// <param name="Purchase_Service_Task">Purchase Order Service Item Task Details - Work Area</param> 
    /// <exception cref="Recordnotfound"/>
    [RfcMethod(AbapName = "ZRETRIEVEORDER")]
    [SoapDocumentMethodAttribute("http://tempuri.org/ZRETRIEVEORDER",
     RequestNamespace = "urn:sap-com:document:sap:rfc:functions",
     RequestElementName = "ZRETRIEVEORDER",
     ResponseNamespace = "urn:sap-com:document:sap:rfc:functions",
     ResponseElementName = "ZRETRIEVEORDER.Response")]
    public virtual void Zretrieveorder (

     [RfcParameter(AbapName = "PURCHASE_COMPONENT",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_COMPONENT", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_COMPTable Purchase_Component,
     [RfcParameter(AbapName = "PURCHASE_HEADER",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_HEADER", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_HDRTable Purchase_Header,
     [RfcParameter(AbapName = "PURCHASE_HEADER_TEXT",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_HEADER_TEXT", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_HDRTXTTable Purchase_Header_Text,
     [RfcParameter(AbapName = "PURCHASE_ITEM",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_ITEM", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_ITMTable Purchase_Item,
     [RfcParameter(AbapName = "PURCHASE_ITEM_TEXT",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_ITEM_TEXT", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_ITMTXTTable Purchase_Item_Text,
     [RfcParameter(AbapName = "PURCHASE_SCHEDULE",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_SCHEDULE", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_SCHTable Purchase_Schedule,
     [RfcParameter(AbapName = "PURCHASE_SERVICE_ITEM",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_SERVICE_ITEM", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_SRVTable Purchase_Service_Item,
     [RfcParameter(AbapName = "PURCHASE_SERVICE_TASK",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_SERVICE_TASK", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_SRVTSKTable Purchase_Service_Task)
    {
        object[]results = null;
        results = this.SAPInvoke("Zretrieveorder",new object[] {
                            Purchase_Component,Purchase_Header,Purchase_Header_Text,Purchase_Item,Purchase_Item_Text,Purchase_Schedule,Purchase_Service_Item,Purchase_Service_Task });
        Purchase_Component = (ZORDER_COMPTable) results[0];
        Purchase_Header = (ZORDER_HDRTable) results[1];
        Purchase_Header_Text = (ZORDER_HDRTXTTable) results[2];
        Purchase_Item = (ZORDER_ITMTable) results[3];
        Purchase_Item_Text = (ZORDER_ITMTXTTable) results[4];
        Purchase_Schedule = (ZORDER_SCHTable) results[5];
        Purchase_Service_Item = (ZORDER_SRVTable) results[6];
        Purchase_Service_Task = (ZORDER_SRVTSKTable) results[7];

    }

    /// <summary>
    /// Remote Function Module ZRETRIEVEORDERHISTORY.  
    /// Retrieve Purchase History
    /// </summary>
    /// <param name="Purchase_Close">Purchase order Close and Completion Status - Work Area</param>
    /// <param name="Purchase_History">Purchase Order History Details - Work Area</param> 
    /// <exception cref="Recordnotfound"/>
    [RfcMethod(AbapName = "ZRETRIEVEORDERHISTORY")]
    [SoapDocumentMethodAttribute("http://tempuri.org/ZRETRIEVEORDERHISTORY",
     RequestNamespace = "urn:sap-com:document:sap:rfc:functions",
     RequestElementName = "ZRETRIEVEORDERHISTORY",
     ResponseNamespace = "urn:sap-com:document:sap:rfc:functions",
     ResponseElementName = "ZRETRIEVEORDERHISTORY.Response")]
    public virtual void Zretrieveorderhistory (

     [RfcParameter(AbapName = "PURCHASE_CLOSE",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_CLOSE", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_CLOSETable Purchase_Close,
     [RfcParameter(AbapName = "PURCHASE_HISTORY",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("PURCHASE_HISTORY", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_HISTORYTable Purchase_History)
    {
        object[]results = null;
        results = this.SAPInvoke("Zretrieveorderhistory",new object[] {
                            Purchase_Close,Purchase_History });
        Purchase_Close = (ZORDER_CLOSETable) results[0];
        Purchase_History = (ZORDER_HISTORYTable) results[1];

    }

    /// <summary>
    /// Remote Function Module ZUPD_HISTORYCTL.  
    /// Update History Control
    /// </summary> 
    /// <exception cref="Errorupdate"/>
    [RfcMethod(AbapName = "ZUPD_HISTORYCTL")]
    [SoapDocumentMethodAttribute("http://tempuri.org/ZUPD_HISTORYCTL",
     RequestNamespace = "urn:sap-com:document:sap:rfc:functions",
     RequestElementName = "ZUPD_HISTORYCTL",
     ResponseNamespace = "urn:sap-com:document:sap:rfc:functions",
     ResponseElementName = "ZUPD_HISTORYCTL.Response")]
    public virtual void Zupd_Historyctl (
)
    {
        object[]results = null;
        results = this.SAPInvoke("Zupd_Historyctl",new object[] {
                             });

    }

  } 

}
