
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 04/01/2010
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Connector;

namespace SAPInterface
{

  /// <summary>
  /// Client SAP proxy class
  /// </summary>
  [WebServiceBinding(Name="dummy.Binding", Namespace="urn:sap-com:document:sap:rfc:functions")]
  [Serializable]
  public class SAPProxy7 : SAPClient
  {
    /// <summary>
    /// Initializes a new SAPProxy7.
    /// </summary>
    public SAPProxy7(){}

    /// <summary>
    /// Initializes a new SAPProxy7 with a new connection based on the specified connection string.
    /// </summary>
    /// <param name="connectionString">A connection string (e.g. RFC or URL) specifying the system where the proxy should connect to.</param>
    public SAPProxy7(string connectionString) : base(connectionString){}

    /// <summary>
    /// Initializes a new SAPProxy7 instance and adds it to the given container.
    /// This allows automated connection mananged by VS component designer:
    /// If container is disposed, it will also dispose this SAPClient instance,
    /// which will dispose a contained connection if needed.
    /// </summary>
    /// <param name="container"<The container where the new SAPClient instance is to be added.>/param<
    public SAPProxy7(System.ComponentModel.IContainer container) : base(container) {}    
  
    /// <summary>
    /// Exception constant for ABAP-Exception RECORDNOTFOUND
    /// </summary>
    public const string Recordnotfound = "RECORDNOTFOUND";
   
    /// <summary>
    /// Exception constant for ABAP-Exception ERRORUPDATE
    /// </summary>
    public const string Errorupdate = "ERRORUPDATE";
   
    /// <summary>
    /// Remote Function Module ZRETRIEVEREJECTION.  
    /// Retrieve Rejection Goods
    /// </summary>
    /// <param name="Rejection_Goods">Purchase Order Goods Rejection Details - Work Area</param> 
    /// <exception cref="Recordnotfound"/>
    [RfcMethod(AbapName = "ZRETRIEVEREJECTION")]
    [SoapDocumentMethodAttribute("http://tempuri.org/ZRETRIEVEREJECTION",
     RequestNamespace = "urn:sap-com:document:sap:rfc:functions",
     RequestElementName = "ZRETRIEVEREJECTION",
     ResponseNamespace = "urn:sap-com:document:sap:rfc:functions",
     ResponseElementName = "ZRETRIEVEREJECTION.Response")]
    public virtual void Zretrieverejection (

     [RfcParameter(AbapName = "REJECTION_GOODS",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("REJECTION_GOODS", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZORDER_REJECTTable Rejection_Goods)
    {
        object[]results = null;
        results = this.SAPInvoke("Zretrieverejection",new object[] {
                            Rejection_Goods });
        Rejection_Goods = (ZORDER_REJECTTable) results[0];

    }

    /// <summary>
    /// Remote Function Module ZUPD_REJECTCTL.  
    /// Update the Rejection Control Date
    /// </summary> 
    /// <exception cref="Errorupdate"/>
    [RfcMethod(AbapName = "ZUPD_REJECTCTL")]
    [SoapDocumentMethodAttribute("http://tempuri.org/ZUPD_REJECTCTL",
     RequestNamespace = "urn:sap-com:document:sap:rfc:functions",
     RequestElementName = "ZUPD_REJECTCTL",
     ResponseNamespace = "urn:sap-com:document:sap:rfc:functions",
     ResponseElementName = "ZUPD_REJECTCTL.Response")]
    public virtual void Zupd_Rejectctl (
)
    {
        object[]results = null;
        results = this.SAPInvoke("Zupd_Rejectctl",new object[] {
                             });

    }

  } 

}
