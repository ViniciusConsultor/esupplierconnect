
/****** Object:  StoredProcedure [dbo].[PURCHASE_EXPEDITE]    Script Date: 01/04/2010 19:58:24 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PURCHASE_EXPEDITE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PURCHASE_EXPEDITE]


GO
/****** Object:  StoredProcedure [dbo].[PURCHASE_EXPEDITE]    Script Date: 01/04/2010 19:57:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[PURCHASE_EXPEDITE]
AS

DECLARE @MATNR AS VARCHAR(18), @WERKS AS CHAR(4), @BDMNG AS DECIMAL(13,3), @TOTSTOCK AS DECIMAL(13,3), 
        @MTLSHORT AS DECIMAL(13,3), @LABST AS DECIMAL(13,3), @QINSP AS DECIMAL(13,3)

DECLARE @EBELN  AS VARCHAR(10), @EBELP AS CHAR(5), @ETENR AS CHAR(4), 
        @SLFDAT AS BIGINT, @MENGE AS DECIMAL(13,3), @ACKDT AS BIGINT , @PRMDT AS BIGINT, 
        @WEMNG AS DECIMAL(13,3),@MEINS  AS CHAR(3)

DECLARE @EXPDT AS BIGINT, @PRMDT1 AS BIGINT, @PRMDT2 AS BIGINT
DECLARE @EXDATE AS CHAR(10), @NEWDT AS CHAR(10)

BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    DELETE FROM MTLSHORTAGE

    DECLARE	C1 CURSOR FOR
     SELECT MATNR, WERKS, SUM(BDMNG)FROM MTLREQ
     WHERE  WERKS = '1000'
     GROUP BY MATNR, WERKS

    OPEN C1
    
    FETCH NEXT FROM C1 INTO @MATNR, @WERKS, @BDMNG

    WHILE @@FETCH_STATUS = 0
     BEGIN
        SELECT @MTLSHORT = 0, 
               @TOTSTOCK = 0
        SELECT @LABST = LABST, @QINSP = QINSP FROM MTLSTOCK
        WHERE MATNR = @MATNR AND
              WERKS = @WERKS
        SELECT @TOTSTOCK = @LABST + @QINSP
        SELECT @MTLSHORT = @BDMNG - @TOTSTOCK
        IF @MTLSHORT > 0
           INSERT INTO MTLSHORTAGE (MATNR, WERKS, MENGE) VALUES(@MATNR, @WERKS, @MTLSHORT)

        FETCH NEXT FROM C1 INTO @MATNR, @WERKS, @BDMNG
     END 
    
    CLOSE C1
    DEALLOCATE C1
    
    DECLARE C2 CURSOR FOR
     SELECT A.EBELN, A.EBELP, A.ETENR, A.MATNR, A.SLFDAT, A.MENGE, A.ACKDT, A.PRMDT, A.WEMNG, B.MEINS
       FROM PURSCH A INNER JOIN PURDTL B ON A.EBELN = B.EBELN AND A.EBELP = B.EBELP
      WHERE A.EBELN NOT IN (SELECT C.EBELN FROM PURHDR C WHERE C.LOEKZ IN ('X', 'C')) AND
            A.MATNR IN (SELECT D.MATNR FROM MTLSHORTAGE D) AND
            A.MENGE <> A.WEMNG  
    OPEN C2

    FETCH NEXT FROM C2 INTO @EBELN, @EBELP, @ETENR, @MATNR, @SLFDAT, @MENGE, @ACKDT, @PRMDT, @WEMNG, @MEINS

    WHILE @@FETCH_STATUS = 0
     BEGIN
       IF EXISTS (SELECT * FROM PUREXPEDITE WHERE EBELN = @EBELN AND EBELP = @EBELP AND ETENR = @ETENR)
         BEGIN
            SELECT @EXPDT = EXPDT, @PRMDT1 = PRMDT1, @PRMDT2 = PRMDT2 FROM PUREXPEDITE WHERE EBELN = @EBELN AND EBELP = @EBELP AND ETENR = @ETENR
            SELECT @EXDATE = CONVERT(CHAR(10), SUBSTRING(CAST(@EXPDT AS CHAR(08)), 7,2) + '/' + SUBSTRING(CAST(@EXPDT AS CHAR(08)), 5,2) + '/' + SUBSTRING(CAST(@EXPDT AS CHAR(08)), 1,4), 103)
            SELECT @NEWDT  = CONVERT(CHAR(10), DATEADD(DAY, 14, GETDATE()), 103)
            IF @EXDATE > @NEWDT
              BEGIN
               SELECT @EXPDT = CAST (SUBSTRING(@NEWDT, 7,4) + SUBSTRING(@NEWDT, 4,2) + SUBSTRING(@NEWDT, 1,2) AS BIGINT)
              END  
            UPDATE PUREXPEDITE SET EXPDT = @EXPDT, RECSTS = 'Y' WHERE EBELN = @EBELN AND EBELP = @EBELP AND ETENR = @ETENR
         END
       ELSE
         BEGIN
            SELECT @NEWDT  = CONVERT(CHAR(10), DATEADD(DAY, 14, GETDATE()), 103)
            IF @SLFDAT > CAST(SUBSTRING(@NEWDT, 7,4) + SUBSTRING(@NEWDT, 4,2) + SUBSTRING(@NEWDT, 1,2) AS BIGINT)
              BEGIN
                SELECT @EXPDT = CAST(SUBSTRING(@NEWDT, 7,4) + SUBSTRING(@NEWDT, 4,2) + SUBSTRING(@NEWDT, 1,2) AS BIGINT)
              END
            ELSE 
              BEGIN
                SELECT @NEWDT = CONVERT(CHAR(10), DATEADD(DAY, 14, GETDATE()), 103)
                SELECT @EXPDT = CAST(SUBSTRING(@NEWDT, 7,4) + SUBSTRING(@NEWDT, 4,2) + SUBSTRING(@NEWDT, 1,2) AS BIGINT) 
              END
           INSERT INTO PUREXPEDITE (EBELN, EBELP, ETENR, MATNR, EXPDT, WEMNG, MEINS, PRMDT1, PRMDT2, RECSTS)
           VALUES (@EBELN, @EBELP, @ETENR, @MATNR, @EXPDT, (@MENGE - @WEMNG), @MEINS, 0, 0, 'Y')            
         END
   
       FETCH NEXT FROM C2 INTO @EBELN, @EBELP, @ETENR, @MATNR, @SLFDAT, @MENGE, @ACKDT, @PRMDT, @WEMNG, @MEINS

     END    

    CLOSE C2
    DEALLOCATE C2

END




