
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 11/08/2009
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Connector;

namespace SAPInterface
{

  /// <summary>
  /// Client SAP proxy class
  /// </summary>
  [WebServiceBinding(Name="dummy.Binding", Namespace="urn:sap-com:document:sap:rfc:functions")]
  [Serializable]
  public class SAPProxy1 : SAPClient
  {
    /// <summary>
    /// Initializes a new SAPProxy1.
    /// </summary>
    public SAPProxy1(){}

    /// <summary>
    /// Initializes a new SAPProxy1 with a new connection based on the specified connection string.
    /// </summary>
    /// <param name="connectionString">A connection string (e.g. RFC or URL) specifying the system where the proxy should connect to.</param>
    public SAPProxy1(string connectionString) : base(connectionString){}

    /// <summary>
    /// Initializes a new SAPProxy1 instance and adds it to the given container.
    /// This allows automated connection mananged by VS component designer:
    /// If container is disposed, it will also dispose this SAPClient instance,
    /// which will dispose a contained connection if needed.
    /// </summary>
    /// <param name="container"<The container where the new SAPClient instance is to be added.>/param<
    public SAPProxy1(System.ComponentModel.IContainer container) : base(container) {}    
  
    /// <summary>
    /// Exception constant for ABAP-Exception RECORDNOTFOUND
    /// </summary>
    public const string Recordnotfound = "RECORDNOTFOUND";
   
    /// <summary>
    /// Remote Function Module ZRETRIEVECONTRACT.  
    /// Retrieve Purchase Contract
    /// </summary>
    /// <param name="Contract_Header">Contract Header Details - Work Area</param>
    /// <param name="Contract_Item">Contract Item Details - Work Area</param> 
    /// <exception cref="Recordnotfound"/>
    [RfcMethod(AbapName = "ZRETRIEVECONTRACT")]
    [SoapDocumentMethodAttribute("http://tempuri.org/ZRETRIEVECONTRACT",
     RequestNamespace = "urn:sap-com:document:sap:rfc:functions",
     RequestElementName = "ZRETRIEVECONTRACT",
     ResponseNamespace = "urn:sap-com:document:sap:rfc:functions",
     ResponseElementName = "ZRETRIEVECONTRACT.Response")]
    public virtual void Zretrievecontract (

     [RfcParameter(AbapName = "CONTRACT_HEADER",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("CONTRACT_HEADER", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZCONTRACT_HDRTable Contract_Header,
     [RfcParameter(AbapName = "CONTRACT_ITEM",RfcType=RFCTYPE.RFCTYPE_ITAB, Optional = false, Direction = RFCINOUT.INOUT)]
     [XmlArray("CONTRACT_ITEM", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     [XmlArrayItem("item", IsNullable=false, Form=XmlSchemaForm.Unqualified)]
     ref ZCONTRACT_ITMTable Contract_Item)
    {
        object[]results = null;
        results = this.SAPInvoke("Zretrievecontract",new object[] {
                            Contract_Header,Contract_Item });
        Contract_Header = (ZCONTRACT_HDRTable) results[0];
        Contract_Item = (ZCONTRACT_ITMTable) results[1];

    }

  } 

}
